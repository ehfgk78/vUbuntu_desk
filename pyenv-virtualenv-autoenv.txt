
# python 가상환경 도구 : pyenv, virtualenv, autoenv


## Ubuntu에서 Build를 할 때 공통적으로 발생하는 문제를 방지하기 위한 패키지들을 설치한다. 
## pyenv -Common build problems에 나와 있는 내용임

$ sudo apt-get install -y make build-essential \
libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \
wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev


## pyenv

$ git clone https://github.com/pyenv/pyenv.git  <설치할 디렉토리>/.pyenv
$ sudo gedit <디렉토리>/.bashrc
 export PYENV_ROOT="HOME/.pyenv
 export PATH="$PYENV_ROOT/bin:$PATH
 eval "$(pyenv init -)"

$ source <설치한 디렉토리>/.bashrc

$ pyenv versions
$ pyenv
$ pyenv install 3.6.1
$ pyenv versions

$ pyenv shell 3.6.1
$ python


## pyenv-virtualenv

$ git clone https://github.com/yyuu/pyenv-virtualenv.git  <설치한 디렉토리>/.pyenv/plugins/pyenv-virtualenv

$ vi <설치한 디렉토리>/.bashrc
 eval "$(pyenv virtualenv-init -)"

$ source <설치한 디렉토리>/.bashrc

$ pyenv virtualenv 3.6.1 py361env
$ pyenv versions

$ pyenv activate py361env
(py361env) $ python -V

$ pyenv deactivate


## autoenv

$ git clone git://github.com/kennethreitz/autoenv.git  <설치한 디렉토리>/.autoenv
$ echo 'source <설치한 디렉토리>/.autoenv/activate.sh' >> <설치한 디렉토리>/.bashrc
$ source <설치한 디렉토리>/.bashrc

$ mkdir py361
$ cd py361
$ touch .env
$ echo "pyenv activate py361env" > .env

$ cd ..
$ cd py361




